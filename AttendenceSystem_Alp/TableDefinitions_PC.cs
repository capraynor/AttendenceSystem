//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18449
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// #DA Schema Name:"PC"
// #DA Schema Source:"DataModules.relativityClient"
// #DA Skipped Tables:"KCTABLE_04,XKTABLE_06,XSTABLE_01,XYTABLE_02"
namespace AttendenceSystem_Alp.PC {
    
    [RemObjects.DataAbstract.Linq.TableName("SKTABLE_07")]
    public partial class SKTABLE_07 : System.ICloneable, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
        protected SKTABLE_07 m____OldValues;
        private long f____SKNO;
        private System.Nullable<long> f____KKNO;
        private System.Nullable<System.DateTime> f____SKDATE;
        private System.Nullable<long> f____LSJS;
        private System.Nullable<short> f____DMFS;
        private System.Nullable<short> f____RZFS;
        private System.Nullable<short> f____CDRS;
        private System.Nullable<short> f____ZTRS;
        private System.Nullable<short> f____KKRS;
        private System.Nullable<short> f____ZCRS;
        [RemObjects.DataAbstract.Linq.FieldName("SKNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.PrimaryKey()]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual long SKNO {
            get {
                return f____SKNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<long>.Default.Compare(this.f____SKNO, value) != 0)) {
                    this.OnPropertyChanging("SKNO");
                    f____SKNO = value;
                    this.OnPropertyChanged("SKNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KKNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> KKNO {
            get {
                return f____KKNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____KKNO, value) != 0)) {
                    this.OnPropertyChanging("KKNO");
                    f____KKNO = value;
                    this.OnPropertyChanged("KKNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("SKDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> SKDATE {
            get {
                return f____SKDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____SKDATE, value) != 0)) {
                    this.OnPropertyChanging("SKDATE");
                    f____SKDATE = value;
                    this.OnPropertyChanged("SKDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("LSJS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> LSJS {
            get {
                return f____LSJS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____LSJS, value) != 0)) {
                    this.OnPropertyChanging("LSJS");
                    f____LSJS = value;
                    this.OnPropertyChanged("LSJS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("DMFS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> DMFS {
            get {
                return f____DMFS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____DMFS, value) != 0)) {
                    this.OnPropertyChanging("DMFS");
                    f____DMFS = value;
                    this.OnPropertyChanged("DMFS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("RZFS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> RZFS {
            get {
                return f____RZFS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____RZFS, value) != 0)) {
                    this.OnPropertyChanging("RZFS");
                    f____RZFS = value;
                    this.OnPropertyChanged("RZFS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("CDRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> CDRS {
            get {
                return f____CDRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____CDRS, value) != 0)) {
                    this.OnPropertyChanging("CDRS");
                    f____CDRS = value;
                    this.OnPropertyChanged("CDRS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("ZTRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> ZTRS {
            get {
                return f____ZTRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____ZTRS, value) != 0)) {
                    this.OnPropertyChanging("ZTRS");
                    f____ZTRS = value;
                    this.OnPropertyChanged("ZTRS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KKRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> KKRS {
            get {
                return f____KKRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____KKRS, value) != 0)) {
                    this.OnPropertyChanging("KKRS");
                    f____KKRS = value;
                    this.OnPropertyChanged("KKRS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("ZCRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> ZCRS {
            get {
                return f____ZCRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____ZCRS, value) != 0)) {
                    this.OnPropertyChanging("ZCRS");
                    f____ZCRS = value;
                    this.OnPropertyChanged("ZCRS");
                }
            }
        }
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        object System.ICloneable.Clone() {
            SKTABLE_07 v____new = new SKTABLE_07();
            v____new.f____SKNO = this.f____SKNO;
            v____new.f____KKNO = this.f____KKNO;
            v____new.f____SKDATE = this.f____SKDATE;
            v____new.f____LSJS = this.f____LSJS;
            v____new.f____DMFS = this.f____DMFS;
            v____new.f____RZFS = this.f____RZFS;
            v____new.f____CDRS = this.f____CDRS;
            v____new.f____ZTRS = this.f____ZTRS;
            v____new.f____KKRS = this.f____KKRS;
            v____new.f____ZCRS = this.f____ZCRS;
            return v____new;
        }
        public virtual void BeginUpdate() {
            this.m____OldValues = ((SKTABLE_07)(((System.ICloneable)(this)).Clone()));
        }
        public virtual void EndUpdate(RemObjects.DataAbstract.Linq.LinqDataAdapter dataAdapter) {
            dataAdapter.UpdateRow<SKTABLE_07>(this.m____OldValues, this);
            this.m____OldValues = null;
        }
        public virtual void CancelUpdate() {
            this.m____OldValues = null;
        }
        protected virtual void OnPropertyChanging(string parameterName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(parameterName));
            }
        }
        protected virtual void OnPropertyChanged(string parameterName) {
            if (((this.PropertyChanged != null) 
                        && (this.m____OldValues == null))) {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(parameterName));
            }
        }
    }
    [RemObjects.DataAbstract.Linq.TableName("KKTABLE_05")]
    public partial class KKTABLE_05 : System.ICloneable, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
        protected KKTABLE_05 m____OldValues;
        private long f____KKNO;
        private System.Nullable<long> f____KCID;
        private System.Nullable<System.DateTime> f____KKDATE;
        private System.Nullable<System.DateTime> f____JKDATE;
        private System.Nullable<System.DateTime> f____KSDATE;
        private System.Nullable<long> f____XXRS;
        private System.Nullable<long> f____XYID;
        private System.Nullable<long> f____JSID;
        private System.Nullable<decimal> f____RLSBNO;
        private string f____KKNAME;
        [RemObjects.DataAbstract.Linq.FieldName("KKNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.PrimaryKey()]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual long KKNO {
            get {
                return f____KKNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<long>.Default.Compare(this.f____KKNO, value) != 0)) {
                    this.OnPropertyChanging("KKNO");
                    f____KKNO = value;
                    this.OnPropertyChanged("KKNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KCID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> KCID {
            get {
                return f____KCID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____KCID, value) != 0)) {
                    this.OnPropertyChanging("KCID");
                    f____KCID = value;
                    this.OnPropertyChanged("KCID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KKDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> KKDATE {
            get {
                return f____KKDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____KKDATE, value) != 0)) {
                    this.OnPropertyChanging("KKDATE");
                    f____KKDATE = value;
                    this.OnPropertyChanged("KKDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("JKDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> JKDATE {
            get {
                return f____JKDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____JKDATE, value) != 0)) {
                    this.OnPropertyChanging("JKDATE");
                    f____JKDATE = value;
                    this.OnPropertyChanged("JKDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KSDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> KSDATE {
            get {
                return f____KSDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____KSDATE, value) != 0)) {
                    this.OnPropertyChanging("KSDATE");
                    f____KSDATE = value;
                    this.OnPropertyChanged("KSDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XXRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> XXRS {
            get {
                return f____XXRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____XXRS, value) != 0)) {
                    this.OnPropertyChanging("XXRS");
                    f____XXRS = value;
                    this.OnPropertyChanged("XXRS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XYID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> XYID {
            get {
                return f____XYID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____XYID, value) != 0)) {
                    this.OnPropertyChanging("XYID");
                    f____XYID = value;
                    this.OnPropertyChanged("XYID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("JSID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> JSID {
            get {
                return f____JSID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____JSID, value) != 0)) {
                    this.OnPropertyChanging("JSID");
                    f____JSID = value;
                    this.OnPropertyChanged("JSID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("RLSBNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.Decimal)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<decimal> RLSBNO {
            get {
                return f____RLSBNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<decimal>>.Default.Compare(this.f____RLSBNO, value) != 0)) {
                    this.OnPropertyChanging("RLSBNO");
                    f____RLSBNO = value;
                    this.OnPropertyChanged("RLSBNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KKNAME")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string KKNAME {
            get {
                return f____KKNAME;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____KKNAME, value) != 0)) {
                    this.OnPropertyChanging("KKNAME");
                    f____KKNAME = value;
                    this.OnPropertyChanged("KKNAME");
                }
            }
        }
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        object System.ICloneable.Clone() {
            KKTABLE_05 v____new = new KKTABLE_05();
            v____new.f____KKNO = this.f____KKNO;
            v____new.f____KCID = this.f____KCID;
            v____new.f____KKDATE = this.f____KKDATE;
            v____new.f____JKDATE = this.f____JKDATE;
            v____new.f____KSDATE = this.f____KSDATE;
            v____new.f____XXRS = this.f____XXRS;
            v____new.f____XYID = this.f____XYID;
            v____new.f____JSID = this.f____JSID;
            v____new.f____RLSBNO = this.f____RLSBNO;
            v____new.f____KKNAME = this.f____KKNAME;
            return v____new;
        }
        public virtual void BeginUpdate() {
            this.m____OldValues = ((KKTABLE_05)(((System.ICloneable)(this)).Clone()));
        }
        public virtual void EndUpdate(RemObjects.DataAbstract.Linq.LinqDataAdapter dataAdapter) {
            dataAdapter.UpdateRow<KKTABLE_05>(this.m____OldValues, this);
            this.m____OldValues = null;
        }
        public virtual void CancelUpdate() {
            this.m____OldValues = null;
        }
        protected virtual void OnPropertyChanging(string parameterName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(parameterName));
            }
        }
        protected virtual void OnPropertyChanged(string parameterName) {
            if (((this.PropertyChanged != null) 
                        && (this.m____OldValues == null))) {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(parameterName));
            }
        }
    }
    [RemObjects.DataAbstract.Linq.TableName("JSTABLE_03")]
    public partial class JSTABLE_03 : System.ICloneable, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
        protected JSTABLE_03 m____OldValues;
        private long f____JSID;
        private string f____JSNAME;
        private string f____JSSEX;
        private System.Nullable<long> f____XYID;
        [RemObjects.DataAbstract.Linq.FieldName("JSID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.PrimaryKey()]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual long JSID {
            get {
                return f____JSID;
            }
            set {
                if ((System.Collections.Generic.Comparer<long>.Default.Compare(this.f____JSID, value) != 0)) {
                    this.OnPropertyChanging("JSID");
                    f____JSID = value;
                    this.OnPropertyChanged("JSID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("JSNAME")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string JSNAME {
            get {
                return f____JSNAME;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____JSNAME, value) != 0)) {
                    this.OnPropertyChanging("JSNAME");
                    f____JSNAME = value;
                    this.OnPropertyChanged("JSNAME");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("JSSEX")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string JSSEX {
            get {
                return f____JSSEX;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____JSSEX, value) != 0)) {
                    this.OnPropertyChanging("JSSEX");
                    f____JSSEX = value;
                    this.OnPropertyChanged("JSSEX");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XYID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> XYID {
            get {
                return f____XYID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____XYID, value) != 0)) {
                    this.OnPropertyChanging("XYID");
                    f____XYID = value;
                    this.OnPropertyChanged("XYID");
                }
            }
        }
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        object System.ICloneable.Clone() {
            JSTABLE_03 v____new = new JSTABLE_03();
            v____new.f____JSID = this.f____JSID;
            v____new.f____JSNAME = this.f____JSNAME;
            v____new.f____JSSEX = this.f____JSSEX;
            v____new.f____XYID = this.f____XYID;
            return v____new;
        }
        public virtual void BeginUpdate() {
            this.m____OldValues = ((JSTABLE_03)(((System.ICloneable)(this)).Clone()));
        }
        public virtual void EndUpdate(RemObjects.DataAbstract.Linq.LinqDataAdapter dataAdapter) {
            dataAdapter.UpdateRow<JSTABLE_03>(this.m____OldValues, this);
            this.m____OldValues = null;
        }
        public virtual void CancelUpdate() {
            this.m____OldValues = null;
        }
        protected virtual void OnPropertyChanging(string parameterName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(parameterName));
            }
        }
        protected virtual void OnPropertyChanged(string parameterName) {
            if (((this.PropertyChanged != null) 
                        && (this.m____OldValues == null))) {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(parameterName));
            }
        }
    }
    [RemObjects.DataAbstract.Linq.TableName("DMTABLE_08")]
    public partial class DMTABLE_08 : System.ICloneable, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
        protected DMTABLE_08 m____OldValues;
        private long f____DMNO;
        private System.Nullable<long> f____SKNO;
        private string f____XSID;
        private System.Nullable<short> f____DKZT;
        private System.Nullable<System.DateTime> f____DMSJ1;
        private System.Nullable<System.DateTime> f____DMSJ2;
        private System.Nullable<System.DateTime> f____DMSJ3;
        private byte[] f____XSZP;
        private string f____XSZW;
        private System.Nullable<System.DateTime> f____POSTDATE;
        private System.Nullable<decimal> f____POSTMANNO;
        [RemObjects.DataAbstract.Linq.FieldName("DMNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.PrimaryKey()]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual long DMNO {
            get {
                return f____DMNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<long>.Default.Compare(this.f____DMNO, value) != 0)) {
                    this.OnPropertyChanging("DMNO");
                    f____DMNO = value;
                    this.OnPropertyChanged("DMNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("SKNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> SKNO {
            get {
                return f____SKNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____SKNO, value) != 0)) {
                    this.OnPropertyChanging("SKNO");
                    f____SKNO = value;
                    this.OnPropertyChanged("SKNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XSID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string XSID {
            get {
                return f____XSID;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____XSID, value) != 0)) {
                    this.OnPropertyChanging("XSID");
                    f____XSID = value;
                    this.OnPropertyChanged("XSID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("DKZT")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> DKZT {
            get {
                return f____DKZT;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____DKZT, value) != 0)) {
                    this.OnPropertyChanging("DKZT");
                    f____DKZT = value;
                    this.OnPropertyChanged("DKZT");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("DMSJ1")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> DMSJ1 {
            get {
                return f____DMSJ1;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____DMSJ1, value) != 0)) {
                    this.OnPropertyChanging("DMSJ1");
                    f____DMSJ1 = value;
                    this.OnPropertyChanged("DMSJ1");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("DMSJ2")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> DMSJ2 {
            get {
                return f____DMSJ2;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____DMSJ2, value) != 0)) {
                    this.OnPropertyChanging("DMSJ2");
                    f____DMSJ2 = value;
                    this.OnPropertyChanged("DMSJ2");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("DMSJ3")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> DMSJ3 {
            get {
                return f____DMSJ3;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____DMSJ3, value) != 0)) {
                    this.OnPropertyChanging("DMSJ3");
                    f____DMSJ3 = value;
                    this.OnPropertyChanged("DMSJ3");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XSZP")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.Blob)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual byte[] XSZP {
            get {
                return f____XSZP;
            }
            set {
                if ((RemObjects.DataAbstract.Linq.LinqDataAdapter.CompareBytes(this.f____XSZP, value) != true)) {
                    this.OnPropertyChanging("XSZP");
                    f____XSZP = value;
                    this.OnPropertyChanged("XSZP");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XSZW")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string XSZW {
            get {
                return f____XSZW;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____XSZW, value) != 0)) {
                    this.OnPropertyChanging("XSZW");
                    f____XSZW = value;
                    this.OnPropertyChanged("XSZW");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("POSTDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> POSTDATE {
            get {
                return f____POSTDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____POSTDATE, value) != 0)) {
                    this.OnPropertyChanging("POSTDATE");
                    f____POSTDATE = value;
                    this.OnPropertyChanged("POSTDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("POSTMANNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.Decimal)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<decimal> POSTMANNO {
            get {
                return f____POSTMANNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<decimal>>.Default.Compare(this.f____POSTMANNO, value) != 0)) {
                    this.OnPropertyChanging("POSTMANNO");
                    f____POSTMANNO = value;
                    this.OnPropertyChanged("POSTMANNO");
                }
            }
        }
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        object System.ICloneable.Clone() {
            DMTABLE_08 v____new = new DMTABLE_08();
            v____new.f____DMNO = this.f____DMNO;
            v____new.f____SKNO = this.f____SKNO;
            v____new.f____XSID = this.f____XSID;
            v____new.f____DKZT = this.f____DKZT;
            v____new.f____DMSJ1 = this.f____DMSJ1;
            v____new.f____DMSJ2 = this.f____DMSJ2;
            v____new.f____DMSJ3 = this.f____DMSJ3;
            v____new.f____XSZP = this.f____XSZP;
            v____new.f____XSZW = this.f____XSZW;
            v____new.f____POSTDATE = this.f____POSTDATE;
            v____new.f____POSTMANNO = this.f____POSTMANNO;
            return v____new;
        }
        public virtual void BeginUpdate() {
            this.m____OldValues = ((DMTABLE_08)(((System.ICloneable)(this)).Clone()));
        }
        public virtual void EndUpdate(RemObjects.DataAbstract.Linq.LinqDataAdapter dataAdapter) {
            dataAdapter.UpdateRow<DMTABLE_08>(this.m____OldValues, this);
            this.m____OldValues = null;
        }
        public virtual void CancelUpdate() {
            this.m____OldValues = null;
        }
        protected virtual void OnPropertyChanging(string parameterName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(parameterName));
            }
        }
        protected virtual void OnPropertyChanged(string parameterName) {
            if (((this.PropertyChanged != null) 
                        && (this.m____OldValues == null))) {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(parameterName));
            }
        }
    }
    [RemObjects.DataAbstract.Linq.TableName("XKTABLE_VIEW1")]
    public partial class XKTABLE_VIEW1 : System.ICloneable, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
        protected XKTABLE_VIEW1 m____OldValues;
        private System.Nullable<long> f____KKNO;
        private string f____XSID;
        private System.Nullable<System.DateTime> f____JKDATE;
        private System.Nullable<long> f____JSID;
        private System.Nullable<long> f____KCID;
        private System.Nullable<System.DateTime> f____KKDATE;
        private string f____KKNAME;
        private System.Nullable<System.DateTime> f____KSDATE;
        private System.Nullable<decimal> f____RLSBNO;
        private System.Nullable<long> f____XXRS;
        private System.Nullable<long> f____XYID;
        private string f____KCNAME;
        private System.Nullable<short> f____KHLX;
        private string f____KS;
        private System.Nullable<long> f____BJID;
        private string f____XSNAME;
        private string f____XSSEX;
        private byte[] f____XSZP;
        private string f____ZW1;
        private string f____ZW2;
        private string f____RLSBGROUPNAME;
        [RemObjects.DataAbstract.Linq.FieldName("KKNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> KKNO {
            get {
                return f____KKNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____KKNO, value) != 0)) {
                    this.OnPropertyChanging("KKNO");
                    f____KKNO = value;
                    this.OnPropertyChanged("KKNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XSID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string XSID {
            get {
                return f____XSID;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____XSID, value) != 0)) {
                    this.OnPropertyChanging("XSID");
                    f____XSID = value;
                    this.OnPropertyChanged("XSID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("JKDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> JKDATE {
            get {
                return f____JKDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____JKDATE, value) != 0)) {
                    this.OnPropertyChanging("JKDATE");
                    f____JKDATE = value;
                    this.OnPropertyChanged("JKDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("JSID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> JSID {
            get {
                return f____JSID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____JSID, value) != 0)) {
                    this.OnPropertyChanging("JSID");
                    f____JSID = value;
                    this.OnPropertyChanged("JSID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KCID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> KCID {
            get {
                return f____KCID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____KCID, value) != 0)) {
                    this.OnPropertyChanging("KCID");
                    f____KCID = value;
                    this.OnPropertyChanged("KCID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KKDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> KKDATE {
            get {
                return f____KKDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____KKDATE, value) != 0)) {
                    this.OnPropertyChanging("KKDATE");
                    f____KKDATE = value;
                    this.OnPropertyChanged("KKDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KKNAME")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string KKNAME {
            get {
                return f____KKNAME;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____KKNAME, value) != 0)) {
                    this.OnPropertyChanging("KKNAME");
                    f____KKNAME = value;
                    this.OnPropertyChanged("KKNAME");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KSDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> KSDATE {
            get {
                return f____KSDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____KSDATE, value) != 0)) {
                    this.OnPropertyChanging("KSDATE");
                    f____KSDATE = value;
                    this.OnPropertyChanged("KSDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("RLSBNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.Decimal)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<decimal> RLSBNO {
            get {
                return f____RLSBNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<decimal>>.Default.Compare(this.f____RLSBNO, value) != 0)) {
                    this.OnPropertyChanging("RLSBNO");
                    f____RLSBNO = value;
                    this.OnPropertyChanged("RLSBNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XXRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> XXRS {
            get {
                return f____XXRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____XXRS, value) != 0)) {
                    this.OnPropertyChanging("XXRS");
                    f____XXRS = value;
                    this.OnPropertyChanged("XXRS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XYID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> XYID {
            get {
                return f____XYID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____XYID, value) != 0)) {
                    this.OnPropertyChanging("XYID");
                    f____XYID = value;
                    this.OnPropertyChanged("XYID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KCNAME")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string KCNAME {
            get {
                return f____KCNAME;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____KCNAME, value) != 0)) {
                    this.OnPropertyChanging("KCNAME");
                    f____KCNAME = value;
                    this.OnPropertyChanged("KCNAME");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KHLX")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> KHLX {
            get {
                return f____KHLX;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____KHLX, value) != 0)) {
                    this.OnPropertyChanging("KHLX");
                    f____KHLX = value;
                    this.OnPropertyChanged("KHLX");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string KS {
            get {
                return f____KS;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____KS, value) != 0)) {
                    this.OnPropertyChanging("KS");
                    f____KS = value;
                    this.OnPropertyChanged("KS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("BJID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> BJID {
            get {
                return f____BJID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____BJID, value) != 0)) {
                    this.OnPropertyChanging("BJID");
                    f____BJID = value;
                    this.OnPropertyChanged("BJID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XSNAME")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string XSNAME {
            get {
                return f____XSNAME;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____XSNAME, value) != 0)) {
                    this.OnPropertyChanging("XSNAME");
                    f____XSNAME = value;
                    this.OnPropertyChanged("XSNAME");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XSSEX")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string XSSEX {
            get {
                return f____XSSEX;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____XSSEX, value) != 0)) {
                    this.OnPropertyChanging("XSSEX");
                    f____XSSEX = value;
                    this.OnPropertyChanged("XSSEX");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XSZP")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.Blob)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual byte[] XSZP {
            get {
                return f____XSZP;
            }
            set {
                if ((RemObjects.DataAbstract.Linq.LinqDataAdapter.CompareBytes(this.f____XSZP, value) != true)) {
                    this.OnPropertyChanging("XSZP");
                    f____XSZP = value;
                    this.OnPropertyChanged("XSZP");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("ZW1")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string ZW1 {
            get {
                return f____ZW1;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____ZW1, value) != 0)) {
                    this.OnPropertyChanging("ZW1");
                    f____ZW1 = value;
                    this.OnPropertyChanged("ZW1");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("ZW2")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string ZW2 {
            get {
                return f____ZW2;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____ZW2, value) != 0)) {
                    this.OnPropertyChanging("ZW2");
                    f____ZW2 = value;
                    this.OnPropertyChanged("ZW2");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("RLSBGROUPNAME")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string RLSBGROUPNAME {
            get {
                return f____RLSBGROUPNAME;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____RLSBGROUPNAME, value) != 0)) {
                    this.OnPropertyChanging("RLSBGROUPNAME");
                    f____RLSBGROUPNAME = value;
                    this.OnPropertyChanged("RLSBGROUPNAME");
                }
            }
        }
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        object System.ICloneable.Clone() {
            XKTABLE_VIEW1 v____new = new XKTABLE_VIEW1();
            v____new.f____KKNO = this.f____KKNO;
            v____new.f____XSID = this.f____XSID;
            v____new.f____JKDATE = this.f____JKDATE;
            v____new.f____JSID = this.f____JSID;
            v____new.f____KCID = this.f____KCID;
            v____new.f____KKDATE = this.f____KKDATE;
            v____new.f____KKNAME = this.f____KKNAME;
            v____new.f____KSDATE = this.f____KSDATE;
            v____new.f____RLSBNO = this.f____RLSBNO;
            v____new.f____XXRS = this.f____XXRS;
            v____new.f____XYID = this.f____XYID;
            v____new.f____KCNAME = this.f____KCNAME;
            v____new.f____KHLX = this.f____KHLX;
            v____new.f____KS = this.f____KS;
            v____new.f____BJID = this.f____BJID;
            v____new.f____XSNAME = this.f____XSNAME;
            v____new.f____XSSEX = this.f____XSSEX;
            v____new.f____XSZP = this.f____XSZP;
            v____new.f____ZW1 = this.f____ZW1;
            v____new.f____ZW2 = this.f____ZW2;
            v____new.f____RLSBGROUPNAME = this.f____RLSBGROUPNAME;
            return v____new;
        }
        public virtual void BeginUpdate() {
            this.m____OldValues = ((XKTABLE_VIEW1)(((System.ICloneable)(this)).Clone()));
        }
        public virtual void EndUpdate(RemObjects.DataAbstract.Linq.LinqDataAdapter dataAdapter) {
            dataAdapter.UpdateRow<XKTABLE_VIEW1>(this.m____OldValues, this);
            this.m____OldValues = null;
        }
        public virtual void CancelUpdate() {
            this.m____OldValues = null;
        }
        protected virtual void OnPropertyChanging(string parameterName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(parameterName));
            }
        }
        protected virtual void OnPropertyChanged(string parameterName) {
            if (((this.PropertyChanged != null) 
                        && (this.m____OldValues == null))) {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(parameterName));
            }
        }
    }
    [RemObjects.DataAbstract.Linq.TableName("SKTABLE_VIEW1")]
    public partial class SKTABLE_VIEW1 : System.ICloneable, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
        protected SKTABLE_VIEW1 m____OldValues;
        private System.Nullable<System.DateTime> f____JKDATE;
        private System.Nullable<long> f____JSID;
        private System.Nullable<long> f____KCID;
        private System.Nullable<System.DateTime> f____KKDATE;
        private string f____KKNAME;
        private long f____KKNO;
        private System.Nullable<System.DateTime> f____KSDATE;
        private System.Nullable<decimal> f____RLSBNO;
        private System.Nullable<long> f____XXRS;
        private System.Nullable<long> f____XYID;
        private string f____KCNAME;
        private System.Nullable<short> f____KHLX;
        private string f____KS;
        private System.Nullable<short> f____CDRS;
        private System.Nullable<short> f____DMFS;
        private System.Nullable<System.DateTime> f____EDITDATE;
        private System.Nullable<decimal> f____EDITMANNO;
        private System.Nullable<short> f____KKRS;
        private System.Nullable<long> f____LSJS;
        private System.Nullable<short> f____RZFS;
        private System.Nullable<System.DateTime> f____SKDATE;
        private long f____SKNO;
        private System.Nullable<short> f____ZCRS;
        private System.Nullable<short> f____ZTRS;
        [RemObjects.DataAbstract.Linq.FieldName("JKDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> JKDATE {
            get {
                return f____JKDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____JKDATE, value) != 0)) {
                    this.OnPropertyChanging("JKDATE");
                    f____JKDATE = value;
                    this.OnPropertyChanged("JKDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("JSID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> JSID {
            get {
                return f____JSID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____JSID, value) != 0)) {
                    this.OnPropertyChanging("JSID");
                    f____JSID = value;
                    this.OnPropertyChanged("JSID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KCID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> KCID {
            get {
                return f____KCID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____KCID, value) != 0)) {
                    this.OnPropertyChanging("KCID");
                    f____KCID = value;
                    this.OnPropertyChanged("KCID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KKDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> KKDATE {
            get {
                return f____KKDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____KKDATE, value) != 0)) {
                    this.OnPropertyChanging("KKDATE");
                    f____KKDATE = value;
                    this.OnPropertyChanged("KKDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KKNAME")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string KKNAME {
            get {
                return f____KKNAME;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____KKNAME, value) != 0)) {
                    this.OnPropertyChanging("KKNAME");
                    f____KKNAME = value;
                    this.OnPropertyChanged("KKNAME");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KKNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual long KKNO {
            get {
                return f____KKNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<long>.Default.Compare(this.f____KKNO, value) != 0)) {
                    this.OnPropertyChanging("KKNO");
                    f____KKNO = value;
                    this.OnPropertyChanged("KKNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KSDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> KSDATE {
            get {
                return f____KSDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____KSDATE, value) != 0)) {
                    this.OnPropertyChanging("KSDATE");
                    f____KSDATE = value;
                    this.OnPropertyChanged("KSDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("RLSBNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.Decimal)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<decimal> RLSBNO {
            get {
                return f____RLSBNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<decimal>>.Default.Compare(this.f____RLSBNO, value) != 0)) {
                    this.OnPropertyChanging("RLSBNO");
                    f____RLSBNO = value;
                    this.OnPropertyChanged("RLSBNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XXRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> XXRS {
            get {
                return f____XXRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____XXRS, value) != 0)) {
                    this.OnPropertyChanging("XXRS");
                    f____XXRS = value;
                    this.OnPropertyChanged("XXRS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("XYID")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> XYID {
            get {
                return f____XYID;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____XYID, value) != 0)) {
                    this.OnPropertyChanging("XYID");
                    f____XYID = value;
                    this.OnPropertyChanged("XYID");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KCNAME")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string KCNAME {
            get {
                return f____KCNAME;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____KCNAME, value) != 0)) {
                    this.OnPropertyChanging("KCNAME");
                    f____KCNAME = value;
                    this.OnPropertyChanged("KCNAME");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KHLX")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> KHLX {
            get {
                return f____KHLX;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____KHLX, value) != 0)) {
                    this.OnPropertyChanging("KHLX");
                    f____KHLX = value;
                    this.OnPropertyChanged("KHLX");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.WideString)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual string KS {
            get {
                return f____KS;
            }
            set {
                if ((System.Collections.Generic.Comparer<string>.Default.Compare(this.f____KS, value) != 0)) {
                    this.OnPropertyChanging("KS");
                    f____KS = value;
                    this.OnPropertyChanged("KS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("CDRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> CDRS {
            get {
                return f____CDRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____CDRS, value) != 0)) {
                    this.OnPropertyChanging("CDRS");
                    f____CDRS = value;
                    this.OnPropertyChanged("CDRS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("DMFS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> DMFS {
            get {
                return f____DMFS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____DMFS, value) != 0)) {
                    this.OnPropertyChanging("DMFS");
                    f____DMFS = value;
                    this.OnPropertyChanged("DMFS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("EDITDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> EDITDATE {
            get {
                return f____EDITDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____EDITDATE, value) != 0)) {
                    this.OnPropertyChanging("EDITDATE");
                    f____EDITDATE = value;
                    this.OnPropertyChanged("EDITDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("EDITMANNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.Decimal)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<decimal> EDITMANNO {
            get {
                return f____EDITMANNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<decimal>>.Default.Compare(this.f____EDITMANNO, value) != 0)) {
                    this.OnPropertyChanging("EDITMANNO");
                    f____EDITMANNO = value;
                    this.OnPropertyChanged("EDITMANNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("KKRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> KKRS {
            get {
                return f____KKRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____KKRS, value) != 0)) {
                    this.OnPropertyChanging("KKRS");
                    f____KKRS = value;
                    this.OnPropertyChanged("KKRS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("LSJS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<long> LSJS {
            get {
                return f____LSJS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<long>>.Default.Compare(this.f____LSJS, value) != 0)) {
                    this.OnPropertyChanging("LSJS");
                    f____LSJS = value;
                    this.OnPropertyChanged("LSJS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("RZFS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> RZFS {
            get {
                return f____RZFS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____RZFS, value) != 0)) {
                    this.OnPropertyChanging("RZFS");
                    f____RZFS = value;
                    this.OnPropertyChanged("RZFS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("SKDATE")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.DateTime)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<System.DateTime> SKDATE {
            get {
                return f____SKDATE;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<System.DateTime>>.Default.Compare(this.f____SKDATE, value) != 0)) {
                    this.OnPropertyChanging("SKDATE");
                    f____SKDATE = value;
                    this.OnPropertyChanged("SKDATE");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("SKNO")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.LargeInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual long SKNO {
            get {
                return f____SKNO;
            }
            set {
                if ((System.Collections.Generic.Comparer<long>.Default.Compare(this.f____SKNO, value) != 0)) {
                    this.OnPropertyChanging("SKNO");
                    f____SKNO = value;
                    this.OnPropertyChanged("SKNO");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("ZCRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> ZCRS {
            get {
                return f____ZCRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____ZCRS, value) != 0)) {
                    this.OnPropertyChanging("ZCRS");
                    f____ZCRS = value;
                    this.OnPropertyChanged("ZCRS");
                }
            }
        }
        [RemObjects.DataAbstract.Linq.FieldName("ZTRS")]
        [RemObjects.DataAbstract.Linq.DataType(RemObjects.DataAbstract.Schema.DataType.SmallInt)]
        [RemObjects.DataAbstract.Linq.LogChanges()]
        public virtual System.Nullable<short> ZTRS {
            get {
                return f____ZTRS;
            }
            set {
                if ((System.Collections.Generic.Comparer<System.Nullable<short>>.Default.Compare(this.f____ZTRS, value) != 0)) {
                    this.OnPropertyChanging("ZTRS");
                    f____ZTRS = value;
                    this.OnPropertyChanged("ZTRS");
                }
            }
        }
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        object System.ICloneable.Clone() {
            SKTABLE_VIEW1 v____new = new SKTABLE_VIEW1();
            v____new.f____JKDATE = this.f____JKDATE;
            v____new.f____JSID = this.f____JSID;
            v____new.f____KCID = this.f____KCID;
            v____new.f____KKDATE = this.f____KKDATE;
            v____new.f____KKNAME = this.f____KKNAME;
            v____new.f____KKNO = this.f____KKNO;
            v____new.f____KSDATE = this.f____KSDATE;
            v____new.f____RLSBNO = this.f____RLSBNO;
            v____new.f____XXRS = this.f____XXRS;
            v____new.f____XYID = this.f____XYID;
            v____new.f____KCNAME = this.f____KCNAME;
            v____new.f____KHLX = this.f____KHLX;
            v____new.f____KS = this.f____KS;
            v____new.f____CDRS = this.f____CDRS;
            v____new.f____DMFS = this.f____DMFS;
            v____new.f____EDITDATE = this.f____EDITDATE;
            v____new.f____EDITMANNO = this.f____EDITMANNO;
            v____new.f____KKRS = this.f____KKRS;
            v____new.f____LSJS = this.f____LSJS;
            v____new.f____RZFS = this.f____RZFS;
            v____new.f____SKDATE = this.f____SKDATE;
            v____new.f____SKNO = this.f____SKNO;
            v____new.f____ZCRS = this.f____ZCRS;
            v____new.f____ZTRS = this.f____ZTRS;
            return v____new;
        }
        public virtual void BeginUpdate() {
            this.m____OldValues = ((SKTABLE_VIEW1)(((System.ICloneable)(this)).Clone()));
        }
        public virtual void EndUpdate(RemObjects.DataAbstract.Linq.LinqDataAdapter dataAdapter) {
            dataAdapter.UpdateRow<SKTABLE_VIEW1>(this.m____OldValues, this);
            this.m____OldValues = null;
        }
        public virtual void CancelUpdate() {
            this.m____OldValues = null;
        }
        protected virtual void OnPropertyChanging(string parameterName) {
            if ((this.PropertyChanging != null)) {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(parameterName));
            }
        }
        protected virtual void OnPropertyChanged(string parameterName) {
            if (((this.PropertyChanged != null) 
                        && (this.m____OldValues == null))) {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(parameterName));
            }
        }
    }
    public partial class DataContext {
        private System.Collections.Generic.IEnumerable<SKTABLE_07> f____SKTABLE_07;
        private System.Collections.Generic.IEnumerable<KKTABLE_05> f____KKTABLE_05;
        private System.Collections.Generic.IEnumerable<JSTABLE_03> f____JSTABLE_03;
        private System.Collections.Generic.IEnumerable<DMTABLE_08> f____DMTABLE_08;
        private System.Collections.Generic.IEnumerable<XKTABLE_VIEW1> f____XKTABLE_VIEW1;
        private System.Collections.Generic.IEnumerable<SKTABLE_VIEW1> f____SKTABLE_VIEW1;
        public DataContext() {
        }
        public virtual System.Collections.Generic.IEnumerable<SKTABLE_07> SKTABLE_07 {
            get {
                return f____SKTABLE_07;
            }
            set {
                f____SKTABLE_07 = value;
            }
        }
        public virtual System.Collections.Generic.IEnumerable<KKTABLE_05> KKTABLE_05 {
            get {
                return f____KKTABLE_05;
            }
            set {
                f____KKTABLE_05 = value;
            }
        }
        public virtual System.Collections.Generic.IEnumerable<JSTABLE_03> JSTABLE_03 {
            get {
                return f____JSTABLE_03;
            }
            set {
                f____JSTABLE_03 = value;
            }
        }
        public virtual System.Collections.Generic.IEnumerable<DMTABLE_08> DMTABLE_08 {
            get {
                return f____DMTABLE_08;
            }
            set {
                f____DMTABLE_08 = value;
            }
        }
        public virtual System.Collections.Generic.IEnumerable<XKTABLE_VIEW1> XKTABLE_VIEW1 {
            get {
                return f____XKTABLE_VIEW1;
            }
            set {
                f____XKTABLE_VIEW1 = value;
            }
        }
        public virtual System.Collections.Generic.IEnumerable<SKTABLE_VIEW1> SKTABLE_VIEW1 {
            get {
                return f____SKTABLE_VIEW1;
            }
            set {
                f____SKTABLE_VIEW1 = value;
            }
        }
    }
}
